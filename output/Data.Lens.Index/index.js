// Generated by purs version 0.13.6
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Array_NonEmpty = require("../Data.Array.NonEmpty/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Lens_Internal_Wander = require("../Data.Lens.Internal.Wander/index.js");
var Data_Map_Internal = require("../Data.Map.Internal/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Set = require("../Data.Set/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Foreign_Object = require("../Foreign.Object/index.js");
var Index = function (ix) {
    this.ix = ix;
};
var ix = function (dict) {
    return dict.ix;
};
var indexSet = function (dictOrd) {
    return new Index(function (x) {
        return function (dictWander) {
            return Data_Lens_Internal_Wander.wander(dictWander)(function (dictApplicative) {
                return function (coalg) {
                    var $22 = Control_Applicative.pure(dictApplicative);
                    var $23 = Data_Set.insert(dictOrd)(x);
                    return function ($24) {
                        return $22($23($24));
                    };
                };
            });
        };
    });
};
var indexNonEmptyArray = new Index(function (n) {
    return function (dictWander) {
        return Data_Lens_Internal_Wander.wander(dictWander)(function (dictApplicative) {
            return function (coalg) {
                return function (xs) {
                    return Data_Maybe.maybe(Control_Applicative.pure(dictApplicative)(xs))((function () {
                        var $25 = Data_Functor.map((dictApplicative.Apply0()).Functor0())(function (x) {
                            return Data_Maybe.fromMaybe(xs)(Data_Array_NonEmpty.updateAt(n)(x)(xs));
                        });
                        return function ($26) {
                            return $25(coalg($26));
                        };
                    })())(Data_Array_NonEmpty.index(xs)(n));
                };
            };
        });
    };
});
var indexMaybe = new Index(function (v) {
    return function (dictWander) {
        return Data_Lens_Internal_Wander.wander(dictWander)(function (dictApplicative) {
            return Data_Traversable.traverse(Data_Traversable.traversableMaybe)(dictApplicative);
        });
    };
});
var indexMap = function (dictOrd) {
    return new Index(function (k) {
        return function (dictWander) {
            return Data_Lens_Internal_Wander.wander(dictWander)(function (dictApplicative) {
                return function (coalg) {
                    return function (m) {
                        return Data_Maybe.maybe(Control_Applicative.pure(dictApplicative)(m))((function () {
                            var $27 = Data_Functor.map((dictApplicative.Apply0()).Functor0())(function (v) {
                                return Data_Map_Internal.insert(dictOrd)(k)(v)(m);
                            });
                            return function ($28) {
                                return $27(coalg($28));
                            };
                        })())(Data_Map_Internal.lookup(dictOrd)(k)(m));
                    };
                };
            });
        };
    });
};
var indexIdentity = new Index(function (v) {
    return function (dictWander) {
        return Data_Lens_Internal_Wander.wander(dictWander)(function (dictApplicative) {
            return Data_Traversable.traverse(Data_Identity.traversableIdentity)(dictApplicative);
        });
    };
});
var indexForeignObject = new Index(function (k) {
    return function (dictWander) {
        return Data_Lens_Internal_Wander.wander(dictWander)(function (dictApplicative) {
            return function (coalg) {
                return function (m) {
                    return Data_Maybe.maybe(Control_Applicative.pure(dictApplicative)(m))((function () {
                        var $29 = Data_Functor.map((dictApplicative.Apply0()).Functor0())(function (v) {
                            return Foreign_Object.insert(k)(v)(m);
                        });
                        return function ($30) {
                            return $29(coalg($30));
                        };
                    })())(Foreign_Object.lookup(k)(m));
                };
            };
        });
    };
});
var indexArray = new Index(function (n) {
    return function (dictWander) {
        return Data_Lens_Internal_Wander.wander(dictWander)(function (dictApplicative) {
            return function (coalg) {
                return function (xs) {
                    return Data_Maybe.maybe(Control_Applicative.pure(dictApplicative)(xs))((function () {
                        var $31 = Data_Functor.map((dictApplicative.Apply0()).Functor0())(function (x) {
                            return Data_Maybe.fromMaybe(xs)(Data_Array.updateAt(n)(x)(xs));
                        });
                        return function ($32) {
                            return $31(coalg($32));
                        };
                    })())(Data_Array.index(xs)(n));
                };
            };
        });
    };
});
var indexArr = function (dictEq) {
    return new Index(function (i) {
        return function (dictWander) {
            return Data_Lens_Internal_Wander.wander(dictWander)(function (dictApplicative) {
                return function (coalg) {
                    return function (f) {
                        return Data_Functor.mapFlipped((dictApplicative.Apply0()).Functor0())(coalg(f(i)))(function (a) {
                            return function (j) {
                                var $21 = Data_Eq.eq(dictEq)(i)(j);
                                if ($21) {
                                    return a;
                                };
                                return f(j);
                            };
                        });
                    };
                };
            });
        };
    });
};
module.exports = {
    Index: Index,
    ix: ix,
    indexArr: indexArr,
    indexMaybe: indexMaybe,
    indexIdentity: indexIdentity,
    indexArray: indexArray,
    indexNonEmptyArray: indexNonEmptyArray,
    indexSet: indexSet,
    indexMap: indexMap,
    indexForeignObject: indexForeignObject
};
