// Generated by purs version 0.13.6
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Routing_Duplex = require("../Routing.Duplex/index.js");
var Routing_Duplex_Generic = require("../Routing.Duplex.Generic/index.js");
var GSep = function (gsep) {
    this.gsep = gsep;
};
var GParams = function (gparams) {
    this.gparams = gparams;
};
var gsepStringString = new GSep(function (a) {
    return function (b) {
        return Routing_Duplex.prefix(a)(Routing_Duplex.prefix(b)(Control_Applicative.pure(Routing_Duplex.applicativeRouteDuplex)(Data_Unit.unit)));
    };
});
var gsepStringRoute = function (dictGRouteDuplexCtr) {
    return new GSep(function (a) {
        var $5 = Routing_Duplex.prefix(a);
        var $6 = Routing_Duplex_Generic.gRouteDuplexCtr(dictGRouteDuplexCtr);
        return function ($7) {
            return $5($6($7));
        };
    });
};
var gsepRouteString = function (dictGRouteDuplexCtr) {
    return new GSep((function () {
        var $8 = Routing_Duplex_Generic.gRouteDuplexCtr(dictGRouteDuplexCtr);
        return function ($9) {
            return Routing_Duplex.suffix($8($9));
        };
    })());
};
var gsepProduct = function (dictGRouteDuplexCtr) {
    return new GSep(Routing_Duplex_Generic.product(dictGRouteDuplexCtr));
};
var gsep = function (dict) {
    return dict.gsep;
};
var gparamsString = function (dictRouteDuplexParams) {
    return new GParams(function (a) {
        var $10 = Routing_Duplex.prefix(a);
        var $11 = Routing_Duplex.params(dictRouteDuplexParams);
        return function ($12) {
            return $10($11($12));
        };
    });
};
var gparamsRoute = function (dictRouteDuplexParams) {
    return new GParams(function (a) {
        var $13 = Routing_Duplex_Generic.product(Routing_Duplex_Generic.gRouteAll)(a);
        var $14 = Routing_Duplex.params(dictRouteDuplexParams);
        return function ($15) {
            return $13($14($15));
        };
    });
};
var gparams = function (dict) {
    return dict.gparams;
};
module.exports = {
    gparams: gparams,
    gsep: gsep,
    GSep: GSep,
    GParams: GParams,
    gsepStringString: gsepStringString,
    gsepStringRoute: gsepStringRoute,
    gsepRouteString: gsepRouteString,
    gsepProduct: gsepProduct,
    gparamsString: gparamsString,
    gparamsRoute: gparamsRoute
};
