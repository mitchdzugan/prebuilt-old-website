// Generated by purs version 0.13.6
"use strict";
var $foreign = require("./foreign.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Reader = require("../Control.Monad.Reader/index.js");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Impulse_FRP_Event = require("../Impulse.FRP.Event/index.js");
var Impulse_FRP_Impl = require("../Impulse.FRP.Impl/index.js");
var sigBuildToRecordImpl = $foreign.sigBuildToRecordImpl_raw(Impulse_FRP_Impl.impl);
var s_zipWithImpl = $foreign.s_zipWithImpl_raw(Impulse_FRP_Impl.impl);
var s_zipWith = function (f) {
    return function (a) {
        return function (b) {
            return Data_Functor.mapFlipped(Control_Monad_Reader_Trans.functorReaderT(Data_Identity.functorIdentity))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Data_Identity.monadIdentity)))(s_zipWithImpl(f)(a)(b));
        };
    };
};
var s_unsub = $foreign.s_unsub_raw(Impulse_FRP_Impl.impl);
var s_tagWith = $foreign.s_tagWith_raw(Impulse_FRP_Impl.impl);
var s_tag = s_tagWith(function (v) {
    return function (b) {
        return b;
    };
});
var s_subRes = $foreign.s_subRes_raw(Impulse_FRP_Impl.impl);
var s_sub = $foreign.s_sub_raw(Impulse_FRP_Impl.impl);
var s_inst = $foreign.s_inst_raw(Impulse_FRP_Impl.impl);
var s_fromImpl = $foreign.s_fromImpl_raw(Impulse_FRP_Impl.impl);
var s_from = function (e) {
    return function (i) {
        return Data_Functor.mapFlipped(Control_Monad_Reader_Trans.functorReaderT(Data_Identity.functorIdentity))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Data_Identity.monadIdentity)))(s_fromImpl(e)(i));
    };
};
var s_reduce_e = function (r) {
    return function (i) {
        return function (e) {
            return s_from(Impulse_FRP_Event.reduce(r)(i)(e))(i);
        };
    };
};
var s_fmapImpl = $foreign.s_fmapImpl_raw(Impulse_FRP_Impl.impl);
var s_fmap = function (f) {
    return function (s) {
        return Data_Functor.mapFlipped(Control_Monad_Reader_Trans.functorReaderT(Data_Identity.functorIdentity))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Data_Identity.monadIdentity)))(s_fmapImpl(f)(s));
    };
};
var s_flattenImpl = $foreign.s_flattenImpl_raw(Impulse_FRP_Impl.impl);
var s_flatten = function (ss) {
    return Data_Functor.mapFlipped(Control_Monad_Reader_Trans.functorReaderT(Data_Identity.functorIdentity))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Data_Identity.monadIdentity)))(s_flattenImpl(ss));
};
var s_destroy = $foreign.s_destroy_raw(Impulse_FRP_Impl.impl);
var s_dedupImpl = $foreign.s_dedupImpl_raw(Impulse_FRP_Impl.impl);
var s_dedup = function (dictEq) {
    return function (s) {
        return Data_Functor.mapFlipped(Control_Monad_Reader_Trans.functorReaderT(Data_Identity.functorIdentity))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Data_Identity.monadIdentity)))(s_dedupImpl(Data_Eq.eq(dictEq))(s));
    };
};
var s_constImpl = $foreign.s_constImpl_raw(Impulse_FRP_Impl.impl);
var s_const = function (v) {
    return Data_Functor.mapFlipped(Control_Monad_Reader_Trans.functorReaderT(Data_Identity.functorIdentity))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Data_Identity.monadIdentity)))(s_constImpl(v));
};
var s_changed = $foreign.s_changed_raw(Impulse_FRP_Impl.impl);
var s_builderInstImpl = $foreign.s_builderInstImpl_raw(Impulse_FRP_Impl.impl);
var s_builderInst = function (s) {
    return Data_Functor.mapFlipped(Control_Monad_Reader_Trans.functorReaderT(Data_Identity.functorIdentity))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Data_Identity.monadIdentity)))(s_builderInstImpl(s));
};
var s_filter = function (pred) {
    return function (s) {
        return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(s_builderInst(s))(function (curr) {
            return Data_Function.flip(s_from)(curr)(Impulse_FRP_Event.filter(pred)(s_changed(s)));
        });
    };
};
var s_reduce = function (r) {
    return function (s) {
        return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(s_builderInst(s))(function (i) {
            var e = s_changed(s);
            return s_from(Impulse_FRP_Event.reduce(r)(i)(e))(i);
        });
    };
};
var s_reduce_s = function (r) {
    return function (pre_i) {
        return function (s) {
            return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(s_builderInst(s))(function (i_b) {
                var i = r(pre_i)(i_b);
                var e = s_changed(s);
                return s_from(Impulse_FRP_Event.reduce(r)(i)(e))(i);
            });
        };
    };
};
var s_buildImpl = $foreign.s_buildImpl_raw(Impulse_FRP_Impl.impl);
var s_build = function (reader) {
    return s_buildImpl(Control_Monad_Reader.runReader(reader));
};
var eff_sigBuilder = (function () {
    var $2 = sigBuildToRecordImpl(function (destroy) {
        return function (signal) {
            return {
                destroy: destroy,
                signal: signal
            };
        };
    });
    return function ($3) {
        return $2(s_build($3));
    };
})();
module.exports = {
    s_from: s_from,
    s_fmap: s_fmap,
    s_const: s_const,
    s_zipWith: s_zipWith,
    s_flatten: s_flatten,
    s_dedup: s_dedup,
    s_build: s_build,
    s_destroy: s_destroy,
    s_subRes: s_subRes,
    s_unsub: s_unsub,
    s_sub: s_sub,
    s_inst: s_inst,
    s_changed: s_changed,
    s_filter: s_filter,
    s_tagWith: s_tagWith,
    s_tag: s_tag,
    s_reduce: s_reduce,
    s_reduce_e: s_reduce_e,
    s_reduce_s: s_reduce_s,
    eff_sigBuilder: eff_sigBuilder
};
