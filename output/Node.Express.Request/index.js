// Generated by purs version 0.13.6
"use strict";
var $foreign = require("./foreign.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Foreign_Class = require("../Foreign.Class/index.js");
var Node_Express_Handler = require("../Node.Express.Handler/index.js");
var Node_Express_Types = require("../Node.Express.Types/index.js");
var setUserData = function (field) {
    return function (val) {
        return function (req) {
            return function (v) {
                return function (v1) {
                    return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)($foreign["_setData"](req, field, val));
                };
            };
        };
    };
};
var isXhr = function (req) {
    return function (v) {
        return function (v1) {
            return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)($foreign["_isXhr"](req));
        };
    };
};
var isStale = function (req) {
    return function (v) {
        return function (v1) {
            return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)($foreign["_isStale"](req));
        };
    };
};
var isFresh = function (req) {
    return function (v) {
        return function (v1) {
            return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)($foreign["_isFresh"](req));
        };
    };
};
var hasType = function (type_) {
    return function (req) {
        return function (v) {
            return function (v1) {
                return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)($foreign["_hasType"](req, type_));
            };
        };
    };
};
var getUserData = function (field) {
    return function (req) {
        return function (v) {
            return function (v1) {
                return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)($foreign["_getData"](req, field, Data_Maybe.Nothing.value, Data_Maybe.Just.create));
            };
        };
    };
};
var getUrl = function (req) {
    return function (v) {
        return function (v1) {
            return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)($foreign["_getUrl"](req));
        };
    };
};
var getSubdomains = function (req) {
    return function (v) {
        return function (v1) {
            return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)($foreign["_getSubdomains"](req));
        };
    };
};
var getSignedCookie = function (name) {
    return function (req) {
        return function (v) {
            return function (v1) {
                return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)($foreign["_getSignedCookie"](req, name, Data_Maybe.Nothing.value, Data_Maybe.Just.create));
            };
        };
    };
};
var getRouteParam = function (dictRequestParam) {
    return function (name) {
        return function (req) {
            return function (v) {
                return function (v1) {
                    return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)($foreign["_getRouteParam"](req, name, Data_Maybe.Nothing.value, Data_Maybe.Just.create));
                };
            };
        };
    };
};
var getRoute = function (req) {
    return function (v) {
        return function (v1) {
            return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)($foreign["_getRoute"](req));
        };
    };
};
var getRequestHeader = function (field) {
    return function (req) {
        return function (v) {
            return function (v1) {
                return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)($foreign["_getHeader"](req, field, Data_Maybe.Nothing.value, Data_Maybe.Just.create));
            };
        };
    };
};
var getRemoteIps = function (req) {
    return function (v) {
        return function (v1) {
            return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)($foreign["_getRemoteIps"](req));
        };
    };
};
var getRemoteIp = function (req) {
    return function (v) {
        return function (v1) {
            return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)($foreign["_getRemoteIp"](req));
        };
    };
};
var getQueryParam = function (name) {
    return function (req) {
        return function (v) {
            return function (v1) {
                return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)($foreign["_getQueryParam"](req, name, Data_Maybe.Nothing.value, Data_Maybe.Just.create));
            };
        };
    };
};
var getQueryParams = getQueryParam;
var getProtocol = function (req) {
    return function (v) {
        return function (v1) {
            return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Control_Monad.liftM1(Effect.monadEffect)(Node_Express_Types.decodeProtocol)($foreign["_getProtocol"](req)));
        };
    };
};
var getPath = function (req) {
    return function (v) {
        return function (v1) {
            return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)($foreign["_getPath"](req));
        };
    };
};
var getOriginalUrl = function (req) {
    return function (v) {
        return function (v1) {
            return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)($foreign["_getOriginalUrl"](req));
        };
    };
};
var getMethod = function (req) {
    return function (v) {
        return function (v1) {
            return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Control_Monad.liftM1(Effect.monadEffect)(Node_Express_Types.decodeMethod)($foreign["_getMethod"](req)));
        };
    };
};
var getHostname = function (req) {
    return function (v) {
        return function (v1) {
            return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)($foreign["_getHostname"](req));
        };
    };
};
var getCookie = function (name) {
    return function (req) {
        return function (v) {
            return function (v1) {
                return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)($foreign["_getCookie"](req, name, Data_Maybe.Nothing.value, Data_Maybe.Just.create));
            };
        };
    };
};
var getBodyParam = function (name) {
    return function (req) {
        return function (v) {
            return function (v1) {
                return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)($foreign["_getBodyParam"](req, name, Data_Maybe.Nothing.value, Data_Maybe.Just.create));
            };
        };
    };
};
var getBody$prime = function (req) {
    return function (v) {
        return function (v1) {
            return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)($foreign["_getBody"](req));
        };
    };
};
var getBody = function (dictDecode) {
    return function (req) {
        return function (v) {
            return function (v1) {
                return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Control_Monad.liftM1(Effect.monadEffect)(Foreign_Class.decode(dictDecode))($foreign["_getBody"](req)));
            };
        };
    };
};
var acceptsLanguage = function (language) {
    return function (req) {
        return function (v) {
            return function (v1) {
                return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)($foreign["_acceptsLanguage"](req, language, Data_Maybe.Nothing.value, Data_Maybe.Just.create));
            };
        };
    };
};
var acceptsCharset = function (charset) {
    return function (req) {
        return function (v) {
            return function (v1) {
                return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)($foreign["_acceptsCharset"](req, charset, Data_Maybe.Nothing.value, Data_Maybe.Just.create));
            };
        };
    };
};
var accepts = function (types) {
    return function (req) {
        return function (v) {
            return function (v1) {
                return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)($foreign["_accepts"](req, types, Data_Maybe.Nothing.value, Data_Maybe.Just.create));
            };
        };
    };
};
var ifAccepts = function (type_) {
    return function (act) {
        return Control_Bind.bind(Node_Express_Handler.bindHandlerM)(Control_Monad.liftM1(Node_Express_Handler.monadHandlerM)(Data_Maybe.maybe(false)(Data_Function["const"](true)))(accepts(type_)))(function (isAccepted) {
            return Control_Applicative.when(Node_Express_Handler.applicativeHandlerM)(isAccepted)(act);
        });
    };
};
module.exports = {
    getRouteParam: getRouteParam,
    getQueryParam: getQueryParam,
    getQueryParams: getQueryParams,
    getBody: getBody,
    "getBody'": getBody$prime,
    getBodyParam: getBodyParam,
    getRoute: getRoute,
    getCookie: getCookie,
    getSignedCookie: getSignedCookie,
    getRequestHeader: getRequestHeader,
    accepts: accepts,
    ifAccepts: ifAccepts,
    acceptsCharset: acceptsCharset,
    acceptsLanguage: acceptsLanguage,
    hasType: hasType,
    getRemoteIp: getRemoteIp,
    getRemoteIps: getRemoteIps,
    getPath: getPath,
    getHostname: getHostname,
    getSubdomains: getSubdomains,
    isFresh: isFresh,
    isStale: isStale,
    isXhr: isXhr,
    getProtocol: getProtocol,
    getMethod: getMethod,
    getUrl: getUrl,
    getOriginalUrl: getOriginalUrl,
    getUserData: getUserData,
    setUserData: setUserData
};
