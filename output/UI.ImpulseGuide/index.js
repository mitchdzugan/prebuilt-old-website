// Generated by purs version 0.13.6
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans/index.js");
var Control_Monad_State_Trans = require("../Control.Monad.State.Trans/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_String_CodePoints = require("../Data.String.CodePoints/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Effect_Unsafe = require("../Effect.Unsafe/index.js");
var Impulse_DOM_API = require("../Impulse.DOM.API/index.js");
var Impulse_DOM_Attrs = require("../Impulse.DOM.Attrs/index.js");
var Impulse_DOM_ImpulseEl = require("../Impulse.DOM.ImpulseEl/index.js");
var Impulse_DOM_Tags = require("../Impulse.DOM.Tags/index.js");
var Impulse_DOM_Util = require("../Impulse.DOM.Util/index.js");
var Impulse_FRP_Event = require("../Impulse.FRP.Event/index.js");
var Impulse_FRP_Signal = require("../Impulse.FRP.Signal/index.js");
var PS = (function () {
    function PS() {

    };
    PS.value = new PS();
    return PS;
})();
var JS = (function () {
    function JS() {

    };
    JS.value = new JS();
    return JS;
})();
var s_timer = (Effect_Unsafe.unsafePerformEffect(Impulse_FRP_Signal.eff_sigBuilder(Impulse_FRP_Signal.s_reduce_e(function (count) {
    return function (v) {
        return count + 1 | 0;
    };
})(0)(Impulse_FRP_Event.timer(1000))))).signal;
var p_lang = Data_Symbol.SProxy.value;
var p_counter = Data_Symbol.SProxy.value;
var p_a = Data_Symbol.SProxy.value;
var eqLang = new Data_Eq.Eq(function (v) {
    return function (v1) {
        if (v instanceof PS && v1 instanceof PS) {
            return true;
        };
        if (v instanceof JS && v1 instanceof JS) {
            return true;
        };
        return false;
    };
});
var renderSection = function (v) {
    return Impulse_DOM_API.keyed(Data_Show.show(Data_Maybe.showMaybe(Data_Show.showString))(v.title))(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))((function () {
        if (v.title instanceof Data_Maybe.Nothing) {
            return Impulse_DOM_API.dnil;
        };
        if (v.title instanceof Data_Maybe.Just) {
            return Impulse_DOM_Tags.h2_(Impulse_DOM_Attrs.anil)(Impulse_DOM_API.text(v.title.value0));
        };
        throw new Error("Failed pattern match at UI.ImpulseGuide (line 36, column 5 - line 38, column 42): " + [ v.title.constructor.name ]);
    })())(function () {
        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(v.preCode)(function () {
            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Util.e_collectAndReduce(new Data_Symbol.IsSymbol(function () {
                return "lang";
            }))()()()()()()()(p_lang)(function (v1) {
                return function (next) {
                    return next;
                };
            })(JS.value)(Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Util.getEnv(new Data_Symbol.IsSymbol(function () {
                return "lang";
            }))()(p_lang))(function (s_lang) {
                return Impulse_DOM_Tags.div_(Impulse_DOM_Attrs.className("card columns"))(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.div_(Impulse_DOM_Attrs.className("column is-three-quarters"))(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.div_(Impulse_DOM_Attrs.anil)(Impulse_DOM_API.s_bindDOM_(s_lang)(function (lang) {
                    return Impulse_DOM_Tags.div_(Impulse_DOM_Attrs.className("field has-addons"))(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.p_(Impulse_DOM_Attrs.className("control"))(Impulse_DOM_Tags.a_(Impulse_DOM_Attrs.className("button is-small is-static"))(Impulse_DOM_API.text("code"))))(function () {
                        return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.p(Impulse_DOM_Attrs.className("control"))(Impulse_DOM_Tags.button_(Impulse_DOM_Attrs.classNames(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Impulse_DOM_Attrs.cn("button is-small"))(function () {
                            return Control_Monad.whenM(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Eq.eq(eqLang)(lang)(JS.value)))(Impulse_DOM_Attrs.cn("is-active"));
                        })))(Impulse_DOM_API.text("javascript"))))(function (b_js) {
                            return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.p(Impulse_DOM_Attrs.className("control"))(Impulse_DOM_Tags.button_(Impulse_DOM_Attrs.classNames(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Impulse_DOM_Attrs.cn("button is-small"))(function () {
                                return Control_Monad.whenM(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Eq.eq(eqLang)(lang)(PS.value)))(Impulse_DOM_Attrs.cn("is-active"));
                            })))(Impulse_DOM_API.text("purescript"))))(function (b_ps) {
                                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.e_emit(new Data_Symbol.IsSymbol(function () {
                                    return "lang";
                                }))()(p_lang)(Data_Functor.mapFlipped(Impulse_FRP_Event.functorEvent)(Impulse_DOM_ImpulseEl.onClick(b_js))(Data_Function["const"](JS.value))))(function () {
                                    return Impulse_DOM_API.e_emit(new Data_Symbol.IsSymbol(function () {
                                        return "lang";
                                    }))()(p_lang)(Data_Functor.mapFlipped(Impulse_FRP_Event.functorEvent)(Impulse_DOM_ImpulseEl.onClick(b_ps))(Data_Function["const"](PS.value)));
                                });
                            });
                        });
                    }));
                })))(function () {
                    return Impulse_DOM_Tags.pre_(Impulse_DOM_Attrs.anil)(Impulse_DOM_API.s_bindDOM_(s_lang)(function (lang) {
                        if (lang instanceof JS) {
                            return Impulse_DOM_Tags.code_(Impulse_DOM_Attrs.className("language-javascript"))(Impulse_DOM_API.text(Data_String_CodePoints.drop(1)(v.js)));
                        };
                        if (lang instanceof PS) {
                            return Impulse_DOM_Tags.code_(Impulse_DOM_Attrs.className("language-haskell"))(Impulse_DOM_API.text(Data_String_CodePoints.drop(1)(v.ps)));
                        };
                        throw new Error("Failed pattern match at UI.ImpulseGuide (line 57, column 40 - line 59, column 78): " + [ lang.constructor.name ]);
                    }));
                })))(function () {
                    return Impulse_DOM_Tags.div_(Impulse_DOM_Attrs.className("column"))(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.div_(Impulse_DOM_Attrs.className("field has-addons"))(Impulse_DOM_Tags.p_(Impulse_DOM_Attrs.className("control"))(Impulse_DOM_Tags.a_(Impulse_DOM_Attrs.className("button is-small is-static"))(Impulse_DOM_API.text("demo")))))(function () {
                        return Impulse_DOM_Tags.div_(Impulse_DOM_Attrs.anil)(Impulse_DOM_API.keyed("codeSection")(v.code));
                    }));
                }));
            })))(function () {
                return v.postCode;
            });
        });
    }));
};
var impulseGuide = Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.div_(Impulse_DOM_Attrs.className("content"))(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.h1_(Impulse_DOM_Attrs.anil)(Impulse_DOM_API.text("Gentle Introduction to Impulse for React developers")))(function () {
    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.p_(Impulse_DOM_Attrs.anil)(Impulse_DOM_API.text("Impulse uses a monadic interface to create components/UIs. For now we will skip the Category Theory behind what that actually means and approach the available API from a practical point of view.")))(function () {
        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.p_(Impulse_DOM_Attrs.anil)(Impulse_DOM_API.text("I tend to think of there being 2 dimensions of computation when building complex UIs. Those 2 dimensions being:")))(function () {
            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.ol_(Impulse_DOM_Attrs.anil)(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.li_(Impulse_DOM_Attrs.anil)(Impulse_DOM_API.text("Building up the markup that represents the current view of the application")))(function () {
                return Impulse_DOM_Tags.li_(Impulse_DOM_Attrs.anil)(Impulse_DOM_API.text("State management"));
            })))(function () {
                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.p_(Impulse_DOM_Attrs.anil)(Impulse_DOM_API.text("In UI frameworks like React the primary dimension that our functions calculate is the 1st dimension evidenced by the fact that our most basic components are functions that return markup. This forces us to handle the secondary dimension of state management in less composable ways like in class methods and higher order components, essentially as side effects. To me this is not the best solution because functions are out greatest tool in programming but with this paradigm the values returned from our functions (ie the markup) are the lesser complex of the two dimensions.")))(function () {
                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.p_(Impulse_DOM_Attrs.anil)(Impulse_DOM_API.text("In Impulse we try to invert this paradigm by allowing our function components to return whatever they want and the building up of markup is treated as a side effect of our computation.")))(function () {
                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.p_(Impulse_DOM_Attrs.anil)(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text("Let's look at examples of the API to make this point more clear. Each of the examples will have the purescript implementation as well as a rough javascript translation of the purescript code. This isn't the actual compiled javascript and writing it would not be compatible with other Impulse components, but it is meant to get the idea across. In the javascript examples, a component is defined as a function from "))(function () {
                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("I")))(function () {
                                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text(" to any return value. This "))(function () {
                                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("I")))(function () {
                                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text(" value is maintained by the framework and is used to store and maintain state. In purescript, this object is maintained under the hood and a component is anything that has the type: "))(function () {
                                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("DOM e c a")))(function () {
                                                return Impulse_DOM_API.text(" (more on what that type means later).");
                                            });
                                        });
                                    });
                                });
                            });
                        })))(function () {
                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(renderSection({
                                title: new Data_Maybe.Just("text(s)"),
                                preCode: Impulse_DOM_Tags.p_(Impulse_DOM_Attrs.anil)(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("text")))(function () {
                                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text(" is the simplest function that renders content to the page. It simply plops the supplied string in the current place in DOM. This shows the difference between React already though because you can see our component is not returning a fragment containing a bunch of text, we are making repeated calls to the "))(function () {
                                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("text")))(function () {
                                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text(" function which draws the string on the page as a side effect. The "))(function () {
                                                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("text")))(function () {
                                                    return Impulse_DOM_API.text(" function has no return value.");
                                                });
                                            });
                                        });
                                    });
                                })),
                                postCode: Impulse_DOM_API.dnil,
                                code: Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text("Hel"))(function () {
                                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text("lo "))(function () {
                                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text("wor"))(function () {
                                            return Impulse_DOM_API.text("ld!");
                                        });
                                    });
                                }),
                                js: "\x0aconst ui1 = (I) => {\x0a\x09I.text(\"Hel\");\x0a\x09I.text(\"lo \";\x0a\x09I.text(\"wor\");\x0a\x09I.text(\"ld!\");\x0a};\x0a",
                                ps: "\x0aui1 :: forall e c. DOM e c Unit\x0aui1 = do\x0a\x09text \"Hel\"\x0a\x09text \"lo \"\x0a\x09text \"wor\"\x0a\x09text \"ld!\"\x0a"
                            }))(function () {
                                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(renderSection({
                                    title: new Data_Maybe.Just("getEnv(prop) => val / upsertEnv(prop, val, drawChildren)"),
                                    preCode: Impulse_DOM_Tags.p_(Impulse_DOM_Attrs.anil)(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text("Impulse maintains a readonly environment. It can be accessed with "))(function () {
                                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("getEnv")))(function () {
                                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text(" and while the current environment can not be modified, we can run other components inside a modified environment using "))(function () {
                                                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("upsertEnv")))(function () {
                                                    return Impulse_DOM_API.text(".");
                                                });
                                            });
                                        });
                                    })),
                                    postCode: Impulse_DOM_API.dnil,
                                    code: Impulse_DOM_Util.upsertEnv(new Data_Symbol.IsSymbol(function () {
                                        return "a";
                                    }))()()()()(p_a)(1)(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Util.upsertEnv(new Data_Symbol.IsSymbol(function () {
                                        return "a";
                                    }))()()()()(p_a)(2)(Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Util.getEnv(new Data_Symbol.IsSymbol(function () {
                                        return "a";
                                    }))()(p_a))(function (a) {
                                        return Impulse_DOM_API.text("Inner val: " + (Data_Show.show(Data_Show.showInt)(a) + ". "));
                                    })))(function () {
                                        return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Util.getEnv(new Data_Symbol.IsSymbol(function () {
                                            return "a";
                                        }))()(p_a))(function (a) {
                                            return Impulse_DOM_API.text("Outer val: " + (Data_Show.show(Data_Show.showInt)(a) + "."));
                                        });
                                    })),
                                    js: "\x0aconst ui2 = (I) => {\x0a\x09I.upsertEnv('a', 1, (I) => {\x0a\x09\x09I.upsertEnv('a', 2, (I) => {\x0a\x09\x09\x09const a = I.getEnv('a');\x0a\x09\x09\x09I.text(`Inner val: ${a}. `);\x0a\x09\x09});\x0a\x09\x09const a = I.getEnv('a');\x0a\x09\x09I.text(`Outer val: ${a}.`);\x0a\x09});\x0a};\x0a",
                                    ps: "\x0ap_a = SProxy :: SProxy \"a\"\x0a\x0aui2 :: forall e c. DOM e c Unit\x0aui2 = do\x0a\x09upsertEnv p_a 1 do\x0a\x09\x09upsertEnv p_a 2 do\x0a\x09\x09\x09a <- getEnv p_a\x0a\x09\x09\x09text $ \"Inner val: \" <> (show a) <> \". \"\x0a\x09\x09a <- getEnv p_a\x0a\x09\x09text $ \"Outer val: \" <> (show a) <> \".\"\x0a"
                                }))(function () {
                                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(renderSection({
                                        title: new Data_Maybe.Just("s_bindDOM(signal, drawChildrenFromCurrentVal)"),
                                        preCode: Impulse_DOM_Tags.p_(Impulse_DOM_Attrs.anil)(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text("Impulse uses a system of "))(function () {
                                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("Event")))(function () {
                                                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text("s and "))(function () {
                                                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("Signal")))(function () {
                                                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text("s to manage state. An event represents a value that exists at certain discrete times and a signal represents a continuous value that changes over time. In this example we create a Signal that increments its value once every second. Then we use "))(function () {
                                                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("s_bindDOM")))(function () {
                                                                return Impulse_DOM_API.text(" which allows us to bind UI that updates every time the signal changes, receiving its current value as a function parameter.");
                                                            });
                                                        });
                                                    });
                                                });
                                            });
                                        })),
                                        postCode: Impulse_DOM_API.dnil,
                                        code: Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.s_bindDOM_(s_timer)(function (timer) {
                                            return Impulse_DOM_API.text(Data_Show.show(Data_Show.showInt)(timer));
                                        }))(function () {
                                            return Impulse_DOM_API.text(" second(s) elapsed");
                                        }),
                                        js: "\x0aconst s_timer = frp.reduce(count => count + 1, 0, frp.timer(1000));\x0aconst ui3 = (I) => {\x0a\x09I.s_bindDOM(s_timer, (timer) => (I) => {\x0a\x09\x09I.text(`${timer}`);\x0a\x09});\x0a\x09I.text(\" second(s) elapsed.\");\x0a};\x0a",
                                        ps: "\x0as_timer = (unsafePerformEffect $ FRP.eff_sigBuilder $ FRP.s_reduce_e (\\count _ -> count + 1) 0 (FRP.timer 1000)).signal\x0a\x0aui3 :: forall e c. DOM e c Unit\x0aui3 = do\x0a\x09s_bindDOM_ s_timer \\timer -> text $ show timer\x0a\x09text \" second(s) elapsed\"\x0a"
                                    }))(function () {
                                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(renderSection({
                                            title: new Data_Maybe.Just("s_use(signalBuilder) => signal"),
                                            preCode: Impulse_DOM_Tags.p_(Impulse_DOM_Attrs.anil)(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("s_use")))(function () {
                                                return Impulse_DOM_API.text(" lets you create a signal whose lifetime is tied to the component it is used in. Looking at this example very similar to the above:");
                                            })),
                                            postCode: Impulse_DOM_Tags.p_(Impulse_DOM_Attrs.anil)(Impulse_DOM_API.text("The key difference is this timer will always show the time since the component was mounted compared to the global timer in the previous example. In this example the signal gets created on mount, garbage collected on unmount and rebuilt on future remounts. In the previous example the signal would keep updating as long as the application was running (unless some action was taken to explicitly shut if off) even if the component was not mounted or unmounted.")),
                                            code: Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.s_use(Impulse_FRP_Signal.s_reduce_e(function (count) {
                                                return function (v) {
                                                    return count + 1 | 0;
                                                };
                                            })(0)(Impulse_FRP_Event.timer(1000))))(function (s_timer1) {
                                                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.s_bindDOM_(s_timer1)(function (timer) {
                                                    return Impulse_DOM_API.text(Data_Show.show(Data_Show.showInt)(timer));
                                                }))(function () {
                                                    return Impulse_DOM_API.text(" second(s) elapsed");
                                                });
                                            }),
                                            js: "\x0aconst ui4 = (I) => {\x0a\x09const s_timer = I.s_use(\x0a\x09\x09(S) => S.reduce_e(count => count + 1, 0, frp.timer(1000))\x0a\x09);\x0a\x09I.s_bindDOM(s_timer, (timer) => (I) => {\x0a\x09\x09I.text(`${timer}`);\x0a\x09});\x0a\x09I.text(\" second(s) elapsed.\");\x0a};\x0a",
                                            ps: "\x0aui4 :: forall e c. DOM e c Unit\x0aui4 = do\x0a\x09s_timer <- s_use $ FRP.s_reduce_e (\\count _ -> count + 1) 0 (FRP.timer 1000)\x0a\x09s_bindDOM_ s_timer \\timer -> text $ show timer\x0a\x09text \" second(s) elapsed\"\x0a"
                                        }))(function () {
                                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(renderSection({
                                                title: Data_Maybe.Nothing.value,
                                                preCode: Impulse_DOM_Tags.p_(Impulse_DOM_Attrs.anil)(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("s_use")))(function () {
                                                    return Impulse_DOM_API.text(" allows you to chain several signal manipulating actions together, and the framework will bundle all of their shutdown handlers into one function that it calls on unmount.");
                                                })),
                                                postCode: Impulse_DOM_API.dnil,
                                                code: Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.s_use(Impulse_FRP_Signal.s_reduce_e(function (count) {
                                                    return function (v) {
                                                        return count + 1 | 0;
                                                    };
                                                })(0)(Impulse_FRP_Event.timer(1000))))(function (s_timer1) {
                                                    return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.s_use(Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_FRP_Signal.s_filter(function (i) {
                                                        return Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(i)(2) === 1;
                                                    })(s_timer1))(function (s_odds) {
                                                        return Impulse_FRP_Signal.s_fmap(function (i) {
                                                            return Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(i)(2);
                                                        })(s_odds);
                                                    })))(function (s_timerHalfTime) {
                                                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.s_bindDOM_(s_timer1)(function (timer) {
                                                            return Impulse_DOM_API.text(Data_Show.show(Data_Show.showInt)(timer));
                                                        }))(function () {
                                                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text(" tick(s) normal speed. "))(function () {
                                                                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.s_bindDOM_(s_timerHalfTime)(function (timerHalfTime) {
                                                                    return Impulse_DOM_API.text(Data_Show.show(Data_Show.showInt)(timerHalfTime));
                                                                }))(function () {
                                                                    return Impulse_DOM_API.text(" tick(s) half speed.");
                                                                });
                                                            });
                                                        });
                                                    });
                                                }),
                                                js: "\x0aconst ui5 = (I) => {\x0a\x09const s_timer = I.s_use(\x0a\x09\x09(S) => S.reduce_e(count => count + 1, 0, frp.timer(1000))\x0a\x09);\x0a\x09const s_timerHalfTime = I.s_use(\x0a\x09\x09(S) => {\x0a\x09\x09\x09// s_odds will be automatically garbage collected\x0a\x09\x09\x09// at the same time as s_timerHalfTime\x0a\x09\x09\x09const s_odds = S.filter(i => i % 2 === 1, s_timer);\x0a\x09\x09\x09return S.fmap(i => i / 2, s_odds);\x0a\x09\x09}\x0a\x09);\x0a\x09I.s_bindDOM(s_timer, (timer) => (I) => {\x0a\x09\x09I.text(`${timer}`);\x0a\x09});\x0a\x09I.text(\" tick(s) normal speed. \");\x0a\x09I.s_bindDOM(s_timerHalfTime, (timerHalfTime) => (I) => {\x0a\x09\x09I.text(`${timerHalfTime}`);\x0a\x09});\x0a\x09I.text(\" tick(s) half speed.\");\x0a};\x0a",
                                                ps: "\x0aui5 :: forall e c. DOM e c Unit\x0aui5 = do\x0a\x09s_timer <- s_use $ FRP.s_reduce_e (\\count _ -> count + 1) 0 (FRP.timer 1000)\x0a\x09s_timerHalfTime <- s_use do\x0a\x09\x09-- s_odds will be automatically garbage collected\x0a\x09\x09-- at the same time as s_timerHalfTime\x0a\x09\x09s_odds <- FRP.s_filter (\\i -> i `mod` 2 == 1) s_timer\x0a\x09\x09FRP.s_fmap (\\i -> i / 2) s_odds\x0a\x09s_bindDOM_ s_timer \\timer -> text $ show timer\x0a\x09text \" tick(s) normal speed. \"\x0a\x09s_bindDOM_ s_timerHalfTime \\timerHalfTime -> text $ show timerHalfTime\x0a\x09text \" tick(s) half speed.\"\x0a"
                                            }))(function () {
                                                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(renderSection({
                                                    title: new Data_Maybe.Just("createElement (tag, attrs, drawChildren) => ImpulseEl"),
                                                    preCode: Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.p_(Impulse_DOM_Attrs.anil)(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text("Draws a DOM element "))(function () {
                                                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("tag")))(function () {
                                                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text(" in the next place in the DOM with its children defined by "))(function () {
                                                                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("drawChildren")))(function () {
                                                                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text(" being a function from "))(function () {
                                                                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("impulseContext")))(function () {
                                                                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text(" to any value. The return value is an "))(function () {
                                                                                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("ImpulseEl")))(function () {
                                                                                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text(" which contains a set of events for the drawn DOM element (ie "))(function () {
                                                                                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("onClick")))(function () {
                                                                                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text(", "))(function () {
                                                                                                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("onHover")))(function () {
                                                                                                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text(", "))(function () {
                                                                                                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("onChange")))(function () {
                                                                                                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text(" etc.) as well as the return value of the "))(function () {
                                                                                                                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("drawChildren")))(function () {
                                                                                                                    return Impulse_DOM_API.text(" function.");
                                                                                                                });
                                                                                                            });
                                                                                                        });
                                                                                                    });
                                                                                                });
                                                                                            });
                                                                                        });
                                                                                    });
                                                                                });
                                                                            });
                                                                        });
                                                                    });
                                                                });
                                                            });
                                                        });
                                                    })))(function () {
                                                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.p_(Impulse_DOM_Attrs.anil)(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text("All tags have a corresponding function that is more succinct version of "))(function () {
                                                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("createElement")))(function () {
                                                                return Impulse_DOM_API.text(" ie:");
                                                            });
                                                        })))(function () {
                                                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.pre_(Impulse_DOM_Attrs.anil)(Impulse_DOM_Tags.code_(Impulse_DOM_Attrs.className("language-javascript"))(Impulse_DOM_API.text("I.button = (attrs, drawChildren) => I.createElement('button', attrs, drawChildren);\x0aI.div = (attrs, drawChildren) => I.createElement('div', attrs, drawChildren);\x0a// ... etc\x0a"))))(function () {
                                                                return Impulse_DOM_Tags.p_(Impulse_DOM_Attrs.anil)(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text("We can use the events returned by "))(function () {
                                                                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("createElement")))(function () {
                                                                        return Impulse_DOM_API.text(" to build and bind to signals.");
                                                                    });
                                                                }));
                                                            });
                                                        });
                                                    }),
                                                    postCode: Impulse_DOM_Tags.p_(Impulse_DOM_Attrs.anil)(Impulse_DOM_API.text("This is the first we are seeing of our UI components being able to return values but it is a very powerful concept and is what allows us to build truly reusable components that do not need to rely on additional 3rd party state management solutions. For example consider a Color Picker component that allows a user to drag a selector around a color wheel to pick the color they want. A well designed implementation of this in Impulse would draw the color picker on screen and return the signal representing the current selected color as well as an event representing any time the user hit enter while the picker was in focus or they clicked an \"accept\" button that the component rendered. This will be easy to slot into any impulse application because we can just use simple functions to transform and filter the returned signal and event to fit our specific types and use case.")),
                                                    code: Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.button(Impulse_DOM_Attrs.anil)(Impulse_DOM_API.text("Click Me!")))(function (d_button) {
                                                        return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.s_use(Impulse_FRP_Signal.s_reduce_e(function (agg) {
                                                            return function (v) {
                                                                return agg + 1 | 0;
                                                            };
                                                        })(0)(Impulse_DOM_ImpulseEl.onClick(d_button))))(function (s_clicks) {
                                                            return Impulse_DOM_API.s_bindDOM_(s_clicks)(function (clicks) {
                                                                return Impulse_DOM_API.text("You clicked " + (Data_Show.show(Data_Show.showInt)(clicks) + " times"));
                                                            });
                                                        });
                                                    }),
                                                    js: "\x0aconst ui6 = (I) => {\x0a\x09const d_button = I.button({}, (I) => I.text(\"Click Me!\"));\x0a\x09const s_clicks = I.s_use(\x0a\x09\x09(S) => S.reduce_e((agg, onclickevent) => agg + 1, 0, d_button.onClick)\x0a\x09);\x0a\x09I.s_bindDOM(s_clicks, (I) => (clicks) => {\x0a\x09\x09I.span({}, (I) => { I.text(`You clicked ${clicks} times`); });\x0a\x09});\x0a};\x0a",
                                                    ps: "\x0aui6 :: forall e c. DOM e c Unit\x0aui6 = do\x0a\x09d_button <- button anil $ text \"Click Me!\"\x0a\x09s_clicks <- s_use $ FRP.s_reduce_e (\\agg _ -> agg + 1) 0 $ onClick d_button\x0a\x09s_bindDOM_ s_clicks \\clicks -> do\x0a\x09\x09text $ \"You clicked \" <> (show clicks) <> \" times\"\x0a"
                                                }))(function () {
                                                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(renderSection({
                                                        title: new Data_Maybe.Just("e_collect(prop, drawChildrenFromEvent) / e_emit(prop, event)"),
                                                        preCode: Impulse_DOM_Tags.p_(Impulse_DOM_Attrs.anil)(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("e_collect")))(function () {
                                                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text(" creates an event out of all of the "))(function () {
                                                                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("event")))(function () {
                                                                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text("s that are "))(function () {
                                                                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("e_emit")))(function () {
                                                                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text("'ed to "))(function () {
                                                                                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("prop")))(function () {
                                                                                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text(" during the execution of "))(function () {
                                                                                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("drawChildrenFromEvent")))(function () {
                                                                                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text(". "))(function () {
                                                                                                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("drawChildrenFromEvent")))(function () {
                                                                                                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text(" is ran by preemptively creating that resulting event and supplying it to "))(function () {
                                                                                                        return Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("drawChildrenFromEvent"));
                                                                                                    });
                                                                                                });
                                                                                            });
                                                                                        });
                                                                                    });
                                                                                });
                                                                            });
                                                                        });
                                                                    });
                                                                });
                                                            });
                                                        })),
                                                        postCode: Impulse_DOM_API.dnil,
                                                        code: Impulse_DOM_API.e_collect(new Data_Symbol.IsSymbol(function () {
                                                            return "counter";
                                                        }))()()()()(p_counter)(function (e_counter) {
                                                            return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.s_use(Impulse_FRP_Signal.s_reduce_e(function (agg) {
                                                                return function (change) {
                                                                    return agg + change | 0;
                                                                };
                                                            })(0)(e_counter)))(function (s_counter) {
                                                                return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.button(Impulse_DOM_Attrs.anil)(Impulse_DOM_API.text("Click for (+1)")))(function (d_button1) {
                                                                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.e_emit(new Data_Symbol.IsSymbol(function () {
                                                                        return "counter";
                                                                    }))()(p_counter)(Data_Functor.mapFlipped(Impulse_FRP_Event.functorEvent)(Impulse_DOM_ImpulseEl.onClick(d_button1))(Data_Function["const"](1))))(function () {
                                                                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.s_bindDOM_(s_counter)(function (counter) {
                                                                            return Impulse_DOM_API.text("Points: " + Data_Show.show(Data_Show.showInt)(counter));
                                                                        }))(function () {
                                                                            return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.button(Impulse_DOM_Attrs.anil)(Impulse_DOM_API.text("Click for (-1)")))(function (d_button2) {
                                                                                return Impulse_DOM_API.e_emit(new Data_Symbol.IsSymbol(function () {
                                                                                    return "counter";
                                                                                }))()(p_counter)(Data_Functor.mapFlipped(Impulse_FRP_Event.functorEvent)(Impulse_DOM_ImpulseEl.onClick(d_button2))(Data_Function["const"](-1 | 0)));
                                                                            });
                                                                        });
                                                                    });
                                                                });
                                                            });
                                                        }),
                                                        js: "\x0aconst ui7 = (I) => {\x0a\x09I.e_collect('counter', (e_counter) => (I) => {\x0a\x09\x09const s_counter = I.s_use(\x0a\x09\x09\x09(S) => S.reduce_e((agg, change) => agg + change, 0, e_counter)\x0a\x09\x09);\x0a\x09\x09const d_button1 = I.button({}, (I) => (\x0a\x09\x09\x09I.text('Click for (+1)')\x0a\x09\x09));\x0a\x09\x09I.e_emit('counter', frp.fmap(() => 1, d_button1.onClick);\x0a\x09\x09I.s_bindDOM(s_counter, (counter) => (I) => {\x0a\x09\x09\x09I.span({}, (I) => (\x0a\x09\x09\x09\x09I.text(`Points: ${counter}`)\x0a\x09\x09\x09));\x0a\x09\x09});\x0a\x09\x09const d_button2 = I.button({}, (I) => (\x0a\x09\x09\x09I.text('Click for (-1)')\x0a\x09\x09));\x0a\x09\x09I.e_emit('counter', frp.fmap(() => (-1), d_button2.onClick);\x0a\x09});\x0a};\x0a",
                                                        ps: "\x0ap_counter = SProxy :: SProxy \"counter\"\x0a\x0aui7 :: forall e c. DOM e c Unit\x0aui7 = do\x0a\x09e_collect p_counter \\e_counter -> do\x0a\x09\x09s_counter <- s_use $ FRP.s_reduce_e (\\agg change -> agg + change) 0 e_counter\x0a\x09\x09d_button1 <- button anil $ text \"Click for (+1)\"\x0a\x09\x09e_emit p_counter $ onClick d_button1 <#> const 1\x0a\x09\x09s_bindDOM_ s_counter \\counter -> do\x0a\x09\x09\x09text $ \"Points: \" <> (show counter)\x0a\x09\x09d_button2 <- button anil $ text \"Click for (-1)\"\x0a\x09\x09e_emit p_counter $ onClick d_button2 <#> const (-1)\x0a"
                                                    }))(function () {
                                                        return renderSection({
                                                            title: new Data_Maybe.Just("e_collectAndReduce(prop, reducer, init, drawChildren)"),
                                                            preCode: Impulse_DOM_Tags.p_(Impulse_DOM_Attrs.anil)(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("e_collectAndReduce")))(function () {
                                                                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text(" is a helper that uses an "))(function () {
                                                                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("e_collect")))(function () {
                                                                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text(" call, reducers the event to a signal based on "))(function () {
                                                                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("reducer")))(function () {
                                                                                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text(" and "))(function () {
                                                                                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("init")))(function () {
                                                                                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text(" and then uses "))(function () {
                                                                                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("upsertEnv")))(function () {
                                                                                                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text(" to stick that signal into the environment at "))(function () {
                                                                                                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("prop")))(function () {
                                                                                                        return Impulse_DOM_API.text(". Compare this example to the previous:");
                                                                                                    });
                                                                                                });
                                                                                            });
                                                                                        });
                                                                                    });
                                                                                });
                                                                            });
                                                                        });
                                                                    });
                                                                });
                                                            })),
                                                            postCode: Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.p_(Impulse_DOM_Attrs.anil)(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text("In this example we have split up the rendering into a few subcomponents. Notice that the "))(function () {
                                                                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("changeScoreButton")))(function () {
                                                                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text(" can be used anywhere that there is some "))(function () {
                                                                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("e_collect")))(function () {
                                                                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text(" above it listening to "))(function () {
                                                                                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("Int")))(function () {
                                                                                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text(" events on "))(function () {
                                                                                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("counter")))(function () {
                                                                                            return Impulse_DOM_API.text(".");
                                                                                        });
                                                                                    });
                                                                                });
                                                                            });
                                                                        });
                                                                    });
                                                                });
                                                            })))(function () {
                                                                return Impulse_DOM_Tags.p_(Impulse_DOM_Attrs.anil)(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text("If you flip to the purescript version of the code you can see that we can actually encode and enforce this constraint in the type system. The return type of the function "))(function () {
                                                                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("changeScoreButton")))(function () {
                                                                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text(" is "))(function () {
                                                                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("forall e c. DOM e { counter :: Collector Int | c } Unit")))(function () {
                                                                                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text(". The "))(function () {
                                                                                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("DOM e c a")))(function () {
                                                                                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text(" type has 3 type variables (e, c, and a) which help to define it and constrain where the component can be used. "))(function () {
                                                                                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("e")))(function () {
                                                                                                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text(" represents the environment and specifies what types must have been inserted into the environment via "))(function () {
                                                                                                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("upsertEnv")))(function () {
                                                                                                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text(" before this component can be used. "))(function () {
                                                                                                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("c")))(function () {
                                                                                                                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text(" represents the active listening event collectors which specifies what events must be being listened to via "))(function () {
                                                                                                                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("e_collect")))(function () {
                                                                                                                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text(" before this component can be used. And finally "))(function () {
                                                                                                                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("a")))(function () {
                                                                                                                                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text(" represents the type of the value returned from the component itself. So in the case of "))(function () {
                                                                                                                                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("changeScoreButton")))(function () {
                                                                                                                                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text(" we see that it can be used anywhere where something above it is ready to accept the emiting of "))(function () {
                                                                                                                                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("Int")))(function () {
                                                                                                                                                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text("s at "))(function () {
                                                                                                                                                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("counter")))(function () {
                                                                                                                                                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text(". This means that if we tried to call "))(function () {
                                                                                                                                                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("changeScoreButton")))(function () {
                                                                                                                                                                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text(" from somewhere else in our code that is not under the umbrella of this "))(function () {
                                                                                                                                                                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.span_(Impulse_DOM_Attrs.className("pre"))(Impulse_DOM_API.text("e_collectAndReduce")))(function () {
                                                                                                                                                                        return Impulse_DOM_API.text(" it would actually be a compile time type error.");
                                                                                                                                                                    });
                                                                                                                                                                });
                                                                                                                                                            });
                                                                                                                                                        });
                                                                                                                                                    });
                                                                                                                                                });
                                                                                                                                            });
                                                                                                                                        });
                                                                                                                                    });
                                                                                                                                });
                                                                                                                            });
                                                                                                                        });
                                                                                                                    });
                                                                                                                });
                                                                                                            });
                                                                                                        });
                                                                                                    });
                                                                                                });
                                                                                            });
                                                                                        });
                                                                                    });
                                                                                });
                                                                            });
                                                                        });
                                                                    });
                                                                }));
                                                            }),
                                                            code: Impulse_DOM_API.e_collect(new Data_Symbol.IsSymbol(function () {
                                                                return "counter";
                                                            }))()()()()(p_counter)(function (e_counter) {
                                                                return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.s_use(Impulse_FRP_Signal.s_reduce_e(function (agg) {
                                                                    return function (change) {
                                                                        return agg + change | 0;
                                                                    };
                                                                })(0)(e_counter)))(function (s_counter) {
                                                                    return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.button(Impulse_DOM_Attrs.anil)(Impulse_DOM_API.text("Click for (+1)")))(function (d_button1) {
                                                                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.e_emit(new Data_Symbol.IsSymbol(function () {
                                                                            return "counter";
                                                                        }))()(p_counter)(Data_Functor.mapFlipped(Impulse_FRP_Event.functorEvent)(Impulse_DOM_ImpulseEl.onClick(d_button1))(Data_Function["const"](1))))(function () {
                                                                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.s_bindDOM_(s_counter)(function (counter) {
                                                                                return Impulse_DOM_API.text("Points: " + Data_Show.show(Data_Show.showInt)(counter));
                                                                            }))(function () {
                                                                                return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.button(Impulse_DOM_Attrs.anil)(Impulse_DOM_API.text("Click for (-1)")))(function (d_button2) {
                                                                                    return Impulse_DOM_API.e_emit(new Data_Symbol.IsSymbol(function () {
                                                                                        return "counter";
                                                                                    }))()(p_counter)(Data_Functor.mapFlipped(Impulse_FRP_Event.functorEvent)(Impulse_DOM_ImpulseEl.onClick(d_button2))(Data_Function["const"](-1 | 0)));
                                                                                });
                                                                            });
                                                                        });
                                                                    });
                                                                });
                                                            }),
                                                            js: "\x0aconst changeScoreButton = (change, message) => (I) => {\x0a\x09const d_button = I.button({}, (I) => (\x0a\x09\x09I.text(message)\x0a\x09));\x0a\x09I.e_emit('counter', frp.fmap(() => change, d_button.onClick);\x0a};\x0aconst displayScore = (I) => {\x0a\x09const s_count = I.getEnv('counter');\x0a\x09I.s_bindDOM(s_counter, (counter) => (I) => {\x0a\x09\x09I.span({}, (I) => (\x0a\x09\x09\x09I.text(`Points: ${counter}`)\x0a\x09\x09));\x0a\x09});\x0a};\x0aconst ui8 = (I) => {\x0a\x09I.e_collectAndReduce('counter',(agg, change) => agg + change, 0, (I) => {\x0a\x09\x09changeScoreButton(  1 , 'Click for (+1)')(I);\x0a\x09\x09displayScore(I);\x0a\x09\x09changeScoreButton((-1), 'Click for (-1)')(I);\x0a\x09});\x0a};\x0a",
                                                            ps: "\x0ap_counter = SProxy :: SProxy \"counter\"\x0a\x0achangeScoreButton :: forall e c. Int -> String -> DOM e { counter :: Collector Int | c } Unit\x0achangeScoreButton = do\x0a\x09d_button <- button anil $ text message\x0a\x09e_emit p_counter $ onClick d_button <#> const change\x0a\x0adisplayScore :: forall e c. DOM { counter :: FRP.Signal Int | e } c Unit\x0adisplayScore = do\x0a\x09s_counter <- getEnv p_counter\x0a\x09s_bindDOM_ s_counter \\counter -> do\x0a\x09\x09text $ \"Points: \" <> (show counter)\x0a\x0aui8 :: forall e c. DOM e c Unit\x0aui8 = do\x0a\x09e_collectAndReduce p_counter (\\agg change -> agg + change) 0 do\x0a\x09\x09changeScoreButton   1  \"Click for (+1)\"\x0a\x09\x09displayScore\x0a\x09\x09changeScoreButton (-1) \"Click for (-1)\"\x0a"
                                                        });
                                                    });
                                                });
                                            });
                                        });
                                    });
                                });
                            });
                        });
                    });
                });
            });
        });
    });
})))(function () {
    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.div_(Impulse_DOM_Attrs.className("mini-spacer"))(Impulse_DOM_API.dnil))(function () {
        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.p_(Impulse_DOM_Attrs.anil)(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_API.text("This guide is a very early work in progress, if you would like to learn more I'd recommend checking out the project on "))(function () {
            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Data_Identity.bindIdentity))(Impulse_DOM_Tags.a_(Impulse_DOM_Attrs.href("https://github.com/mitchdzugan/purescript-impulse"))(Impulse_DOM_API.text("GitHub")))(function () {
                return Impulse_DOM_API.text(" and filing an issue if you would like to see anything else explained. I'm juggling a lot of different aspects of this project at the moment and likely won't be making too many more updates to the guides in the near future unless other people express interest, because as of right now I'm just rambling to myself :P");
            });
        })))(function () {
            return Impulse_DOM_Tags.div_(Impulse_DOM_Attrs.className("spacer"))(Impulse_DOM_API.dnil);
        });
    });
});
module.exports = {
    p_lang: p_lang,
    p_counter: p_counter,
    p_a: p_a,
    s_timer: s_timer,
    PS: PS,
    JS: JS,
    renderSection: renderSection,
    impulseGuide: impulseGuide,
    eqLang: eqLang
};
