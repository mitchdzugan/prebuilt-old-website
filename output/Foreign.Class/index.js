// Generated by purs version 0.13.6
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Monad_Except = require("../Control.Monad.Except/index.js");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Data_Void = require("../Data.Void/index.js");
var Foreign = require("../Foreign/index.js");
var Foreign_Internal = require("../Foreign.Internal/index.js");
var Foreign_NullOrUndefined = require("../Foreign.NullOrUndefined/index.js");
var Foreign_Object = require("../Foreign.Object/index.js");
var Encode = function (encode) {
    this.encode = encode;
};
var Decode = function (decode) {
    this.decode = decode;
};
var voidEncode = new Encode(Data_Void.absurd);
var voidDecode = new Decode(function (v) {
    return Control_Monad_Except_Trans.except(Data_Identity.applicativeIdentity)(new Data_Either.Left(Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList)(new Foreign.ForeignError("Decode: void"))));
});
var unitEncode = new Encode(function (v) {
    return Foreign.unsafeToForeign({});
});
var unitDecode = new Decode(function (v) {
    return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Unit.unit);
});
var stringEncode = new Encode(Foreign.unsafeToForeign);
var stringDecode = new Decode(Foreign.readString);
var numberEncode = new Encode(Foreign.unsafeToForeign);
var numberDecode = new Decode(Foreign.readNumber);
var intEncode = new Encode(Foreign.unsafeToForeign);
var intDecode = new Decode(Foreign.readInt);
var foreignEncode = new Encode(Control_Category.identity(Control_Category.categoryFn));
var foreignDecode = new Decode(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)));
var encode = function (dict) {
    return dict.encode;
};
var maybeEncode = function (dictEncode) {
    return new Encode(Data_Maybe.maybe(Foreign_NullOrUndefined["undefined"])(encode(dictEncode)));
};
var objectEncode = function (dictEncode) {
    return new Encode((function () {
        var $11 = Foreign_Object.mapWithKey(function (v) {
            return encode(dictEncode);
        });
        return function ($12) {
            return Foreign.unsafeToForeign($11($12));
        };
    })());
};
var decode = function (dict) {
    return dict.decode;
};
var maybeDecode = function (dictDecode) {
    return new Decode(Foreign_NullOrUndefined.readNullOrUndefined(decode(dictDecode)));
};
var objectDecode = function (dictDecode) {
    return new Decode(Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))((function () {
        var $13 = Data_Traversable.sequence(Foreign_Object.traversableObject)(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity));
        var $14 = Foreign_Object.mapWithKey(function (v) {
            return decode(dictDecode);
        });
        return function ($15) {
            return $13($14($15));
        };
    })())(Foreign_Internal.readObject));
};
var charEncode = new Encode(Foreign.unsafeToForeign);
var charDecode = new Decode(Foreign.readChar);
var booleanEncode = new Encode(Foreign.unsafeToForeign);
var booleanDecode = new Decode(Foreign.readBoolean);
var arrayEncode = function (dictEncode) {
    return new Encode((function () {
        var $16 = Data_Functor.map(Data_Functor.functorArray)(encode(dictEncode));
        return function ($17) {
            return Foreign.unsafeToForeign($16($17));
        };
    })());
};
var arrayDecode = function (dictDecode) {
    return new Decode((function () {
        var readElement = function (i) {
            return function (value) {
                return Control_Monad_Except.mapExcept(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Foreign.ErrorAtIndex.create(i))))(decode(dictDecode)(value));
            };
        };
        var readElements = function (arr) {
            return Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Array.zipWith(readElement)(Data_Array.range(0)(Data_Array.length(arr)))(arr));
        };
        return Control_Bind.composeKleisli(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign.readArray)(readElements);
    })());
};
module.exports = {
    decode: decode,
    encode: encode,
    Decode: Decode,
    Encode: Encode,
    voidDecode: voidDecode,
    unitDecode: unitDecode,
    foreignDecode: foreignDecode,
    stringDecode: stringDecode,
    charDecode: charDecode,
    booleanDecode: booleanDecode,
    numberDecode: numberDecode,
    intDecode: intDecode,
    arrayDecode: arrayDecode,
    maybeDecode: maybeDecode,
    objectDecode: objectDecode,
    voidEncode: voidEncode,
    unitEncode: unitEncode,
    foreignEncode: foreignEncode,
    stringEncode: stringEncode,
    charEncode: charEncode,
    booleanEncode: booleanEncode,
    numberEncode: numberEncode,
    intEncode: intEncode,
    arrayEncode: arrayEncode,
    maybeEncode: maybeEncode,
    objectEncode: objectEncode
};
