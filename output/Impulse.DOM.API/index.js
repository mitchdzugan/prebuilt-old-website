// Generated by purs version 0.13.6
"use strict";
var $foreign = require("./foreign.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Monad_Reader = require("../Control.Monad.Reader/index.js");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Hashable = require("../Data.Hashable/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Impulse_DOM_Attrs = require("../Impulse.DOM.Attrs/index.js");
var Impulse_DOM_ImpulseEl = require("../Impulse.DOM.ImpulseEl/index.js");
var Impulse_DOM_Snabbdom = require("../Impulse.DOM.Snabbdom/index.js");
var Impulse_FRP_Impl = require("../Impulse.FRP.Impl/index.js");
var Impulse_FRP_Signal = require("../Impulse.FRP.Signal/index.js");
var Record = require("../Record/index.js");
var withAlteredEnv = function (f) {
    return function (inner) {
        return Data_Functor.mapFlipped(Control_Monad_Reader_Trans.functorReaderT(Data_Identity.functorIdentity))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Data_Identity.monadIdentity)))($foreign.withAlteredEnvImpl(f)(Control_Monad_Reader.runReader(inner)));
    };
};
var toMarkupImpl = $foreign.toMarkupImpl_raw(Impulse_DOM_Snabbdom.impl)(Impulse_FRP_Impl.impl);
var toMarkup = function (envInit) {
    return function (dom) {
        return toMarkupImpl(envInit)(Control_Monad_Reader.runReader(dom));
    };
};
var text = function (s) {
    return Data_Functor.mapFlipped(Control_Monad_Reader_Trans.functorReaderT(Data_Identity.functorIdentity))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Data_Identity.monadIdentity)))($foreign.textImpl(s));
};
var s_use = function (sb) {
    return Data_Functor.mapFlipped(Control_Monad_Reader_Trans.functorReaderT(Data_Identity.functorIdentity))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Data_Identity.monadIdentity)))($foreign.s_useImpl(Impulse_FRP_Signal.s_build(sb)));
};
var s_bindDOMImpl = $foreign.s_bindDOMImpl_raw(Impulse_FRP_Impl.impl);
var s_bindDOM = function (s) {
    return function (inner) {
        return Data_Functor.mapFlipped(Control_Monad_Reader_Trans.functorReaderT(Data_Identity.functorIdentity))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Data_Identity.monadIdentity)))(s_bindDOMImpl(s)(function ($8) {
            return Control_Monad_Reader.runReader(inner($8));
        }));
    };
};
var s_bindDOM_ = function (s) {
    return function (f) {
        return Data_Functor.mapFlipped(Control_Monad_Reader_Trans.functorReaderT(Data_Identity.functorIdentity))(s_bindDOM(s)(f))(Data_Function["const"](Data_Unit.unit));
    };
};
var keyed = function (s) {
    return function (inner) {
        return Data_Functor.mapFlipped(Control_Monad_Reader_Trans.functorReaderT(Data_Identity.functorIdentity))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Data_Identity.monadIdentity)))($foreign.keyedImpl(s)(Control_Monad_Reader.runReader(inner)));
    };
};
var env = Data_Functor.mapFlipped(Control_Monad_Reader_Trans.functorReaderT(Data_Identity.functorIdentity))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Data_Identity.monadIdentity)))($foreign.envImpl);
var e_emit = function (dictIsSymbol) {
    return function (dictCons) {
        return function (proxy) {
            return function (event) {
                return Data_Functor.mapFlipped(Control_Monad_Reader_Trans.functorReaderT(Data_Identity.functorIdentity))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Data_Identity.monadIdentity)))($foreign.e_emitImpl(Record.get(dictIsSymbol)()(proxy))(event));
            };
        };
    };
};
var e_consumeImpl = $foreign.e_consumeImpl_raw(Impulse_FRP_Impl.impl);
var e_consume = function (f) {
    return function (e) {
        return Data_Functor.mapFlipped(Control_Monad_Reader_Trans.functorReaderT(Data_Identity.functorIdentity))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Data_Identity.monadIdentity)))(e_consumeImpl(f)(e));
    };
};
var e_collectImpl = $foreign.e_collectImpl_raw(Impulse_FRP_Impl.impl);
var e_collect = function (dictIsSymbol) {
    return function (dictLacks) {
        return function (dictCons) {
            return function (dictCons1) {
                return function (dictUnion) {
                    return function (p) {
                        return function (inner) {
                            return Data_Functor.mapFlipped(Control_Monad_Reader_Trans.functorReaderT(Data_Identity.functorIdentity))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Data_Identity.monadIdentity)))(e_collectImpl(function (cs) {
                                return function (c) {
                                    return Record.union()(Record.insert(dictIsSymbol)()()(p)(c)({}))(cs);
                                };
                            })(Record.get(dictIsSymbol)()(p))(function ($9) {
                                return Control_Monad_Reader.runReader(inner($9));
                            }));
                        };
                    };
                };
            };
        };
    };
};
var dnil = Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Data_Identity.applicativeIdentity))(Data_Unit.unit);
var d_stash = function (inner) {
    return Data_Functor.mapFlipped(Control_Monad_Reader_Trans.functorReaderT(Data_Identity.functorIdentity))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Data_Identity.monadIdentity)))($foreign.d_stashImpl(Control_Monad_Reader.runReader(inner)));
};
var d_memo = function (dictHashable) {
    return function (v) {
        return function (inner) {
            return Data_Functor.mapFlipped(Control_Monad_Reader_Trans.functorReaderT(Data_Identity.functorIdentity))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Data_Identity.monadIdentity)))($foreign.d_memoImpl(Data_Hashable.hash(dictHashable))(v)(function ($10) {
                return Control_Monad_Reader.runReader(inner($10));
            }));
        };
    };
};
var d_apply = function (stash) {
    return Data_Functor.mapFlipped(Control_Monad_Reader_Trans.functorReaderT(Data_Identity.functorIdentity))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Data_Identity.monadIdentity)))($foreign.d_applyImpl(stash));
};
var d_apply_ = function (stash) {
    return Data_Functor.mapFlipped(Control_Monad_Reader_Trans.functorReaderT(Data_Identity.functorIdentity))(d_apply(stash))(Data_Function["const"](Data_Unit.unit));
};
var createElementImpl = $foreign.createElementImpl_raw(Impulse_FRP_Impl.impl);
var createElement = function (tag) {
    return function (attrs) {
        return function (inner) {
            return Data_Functor.mapFlipped(Control_Monad_Reader_Trans.functorReaderT(Data_Identity.functorIdentity))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Data_Identity.monadIdentity)))(createElementImpl(tag)($foreign.toJSAttrs(Data_Maybe.fromMaybe)(Impulse_DOM_Attrs.mkAttrs(attrs)))(Control_Monad_Reader.runReader(inner)));
        };
    };
};
var createElement_ = function (tag) {
    return function (attrs) {
        return function (inner) {
            return Data_Functor.mapFlipped(Control_Monad_Reader_Trans.functorReaderT(Data_Identity.functorIdentity))(createElement(tag)(attrs)(inner))(Impulse_DOM_ImpulseEl.elRes);
        };
    };
};
var attachImpl = $foreign.attachImpl_raw(Impulse_DOM_Snabbdom.impl)(Impulse_FRP_Impl.impl);
var attach = function (id) {
    return function (envInit) {
        return function (postRender) {
            return function (dom) {
                return attachImpl(id)(envInit)(postRender)(Control_Monad_Reader.runReader(dom));
            };
        };
    };
};
var _eff = function (eff) {
    return Data_Functor.mapFlipped(Control_Monad_Reader_Trans.functorReaderT(Data_Identity.functorIdentity))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Data_Identity.monadIdentity)))($foreign["_effImpl"](eff));
};
module.exports = {
    createElement: createElement,
    createElement_: createElement_,
    text: text,
    s_use: s_use,
    s_bindDOM: s_bindDOM,
    s_bindDOM_: s_bindDOM_,
    e_collect: e_collect,
    e_emit: e_emit,
    e_consume: e_consume,
    d_memo: d_memo,
    d_stash: d_stash,
    d_apply: d_apply,
    d_apply_: d_apply_,
    keyed: keyed,
    attach: attach,
    toMarkup: toMarkup,
    env: env,
    withAlteredEnv: withAlteredEnv,
    dnil: dnil,
    "_eff": _eff,
    stashRes: $foreign.stashRes,
    ssr_then: $foreign.ssr_then,
    detach: $foreign.detach,
    attachRes: $foreign.attachRes
};
